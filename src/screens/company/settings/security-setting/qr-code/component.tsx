import { MDBBtn, MDBSpinner, MDBModalHeader, MDBRow, MDBCol, MDBCard, MDBCardBody, MDBInput } from "mdbreact";
import React from "react";
import "react-datepicker/dist/react-datepicker.css";
import { connect } from "react-redux";
import { bindActionCreators, Dispatch } from "redux";
import { validateField } from "containers/utils/utils";
class QRCodeComponent extends React.Component<any, any> {
  constructor(props) {
    super(props);
    this.state = {
      isDisableGauth: true
    };
  }
  componentDidMount() {
    this.setState({ ...this.state, isDisableGauth: true });
  }
  sendAuthSMS = () => { };
  reSendCode = async () => {
    await this.setState({
      ...this.state,
      countToExpire: this.state.countToExpire !== 0 ? this.state.countToExpire - 1 : 0
    });
    // this.props.resendCode(this.state.countToExpire, this.props.userInfo.uuid, this.props.userInfo.username);
  };

  validate = (type, value, field) => {
    const fieldValidationErrors = this.state.formErrors;
    let codeValid = this.state.codeValid;
    const validate = validateField(type, value);
    switch (field) {
      case "access_token":
        codeValid = validate.filedValid;
        fieldValidationErrors.access_token = validate.fieldValidationErrors;
        break;
      default:
        break;
    }
    this.setState(
      {
        formErrors: fieldValidationErrors,
        codeValid
      },
      this.validateForm
    );
  };

  validateForm = () => {
    this.setState({
      formValid: this.state.codeValid
    });
  };

  verifyCode = async () => {
    event.preventDefault();
  };

  disableGGAuth = () => { };

  handleChange = (field: string) => (event: any) => {
    event.persist();
    this.setState({
      ...this.state,
      [field]: event.target.value
    });
  };

  render() {
    return (
      <form>
        <MDBModalHeader>
          User_Name {this.state.isDisableGauth ? "Disable" : "Enable"} Google Authenticator
        </MDBModalHeader>
        {/* miss button close modal */}
        <MDBRow>
          <MDBCol className="mx-auto my-auto">
            this's loading!
            <form className="gauth-access">
              <MDBCard>
                <MDBCardBody>
                  {this.state.isDisableGauth ? (
                    // disable GG Authenticator
                    <form className="needs-validation" noValidate>
                      <div>
                        <p>To disable Google Authenticator, enter the 6-digit verification code generated by the app</p>
                      </div>
                      <div className="grey-text">
                        <MDBRow>
                          <MDBCol sm="12" md="8" className="mx-auto">
                            <MDBInput
                              label="6 - Digit Verification Code"
                              placeholder="xxxxxx"
                              icon="qrcode"
                              group
                              type="number"
                              validate
                              error="wrong"
                              success="right"
                              required
                            />
                          </MDBCol>
                        </MDBRow>
                      </div>
                      <div className="text-center">
                        <MDBBtn
                          color="danger"
                          className="btn-lg"
                          type="submit"
                          // disabled={checked || this.props.isLoading}
                          onClick={this.disableGGAuth}
                        >
                          Save Change
                          {this.props.isLoading ? <MDBSpinner small /> : null}
                        </MDBBtn>
                      </div>
                      <p className="text-muted text-center my-3">© Bitwage Inc, 2014-2020</p>
                    </form>
                  ) : (
                      <form className="needs-validation" noValidate>
                        <div>
                          <p>1. Download and install Google Authenticator App.</p>
                          <p>2. In Google Authenticator, touch Menu and select "Set up Account".</p>
                          <p>3. User your phone's camera to scan this barcode:</p>
                          <h5 className="mt-1">Instructions</h5>
                        </div>
                        <MDBCol className="text-center">
                          <img
                            width="300"
                            height="300"
                            alt="{{qr_alt}}"
                            className="img-responsive"
                            src="https://chart.googleapis.com/chart?chs=300x300&amp;cht=qr&amp;chl=Hello%20world&amp;choe=UTF-8"
                          />
                        </MDBCol>
                        <div className="grey-text">
                          <MDBRow>
                            <MDBCol sm="12" md="8" className="mx-auto">
                              <MDBInput
                                label="6 - Digit Verification Code"
                                placeholder="xxxxxx"
                                icon="qrcode"
                                group
                                type="number"
                                validate
                                error="wrong"
                                success="right"
                                required
                              />
                            </MDBCol>
                          </MDBRow>
                        </div>
                        <div className="text-center">
                          <MDBBtn
                            color="primary"
                            className="btn-lg"
                            type="submit"
                            // disabled={checked || this.props.isLoading}
                            onClick={this.verifyCode}
                          >
                            Save Change
                          {this.props.isLoading ? <MDBSpinner small /> : null}
                          </MDBBtn>
                        </div>
                        <p className="text-muted text-center my-3">© Bitwage Inc, 2014-2020</p>
                      </form>
                    )}
                </MDBCardBody>
              </MDBCard>
            </form>
          </MDBCol>
        </MDBRow>
      </form>
    );
  }
}
const mapStateToProps = state => {
  return {
    error: state.common.errorMessShow,
    isLoading: state.common.isLoading,
    userInfo: state.user.userInfo,
    userSecurity: state.screen.setting.userSetting.userSecurity
  };
};
const mapDispatchToProps = (dispatch: Dispatch) => bindActionCreators({}, dispatch);

export default connect(mapStateToProps, mapDispatchToProps)(QRCodeComponent);
